apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: sonqube-integration-test
  annotations:
    pipelinesascode.tekton.dev/on-comment: "^((/test-all)|(/sonar-e2e)|(test-multi.*\ sonar-e2e.*))$"
    pipelinesascode.tekton.dev/on-cel-expression: |-
      (
        source_branch.matches("^(main|master|release-.*)$")
      ) && (
        "testing/***".pathChanged() ||
        ".tekton/integration.yaml".pathChanged()
      ) && ((
        event == "push" && (
          source_branch.matches("^(main|master|release.*|alauda.*)$") ||
          target_branch.matches("^(main|master|release.*|alauda.*)$") ||
          target_branch.startsWith("refs/tags/")
        )
      ) || (
        event == "pull_request" && (
          target_branch.matches("^(main|master|release-.*)$")
        )
      ))

    pipelinesascode.tekton.dev/max-keep-runs: "5"
spec:
  taskRunSpecs:
    - pipelineTaskName: run-test
      computeResources:
        limits:
          cpu: "4"
          memory: 4Gi
  pipelineRef:
    resolver: hub
    params:
      - name: catalog
        value: alauda
      - name: type
        value: tekton
      - name: kind
        value: pipeline
      - name: name
        value: vcluster-integration-test
      - name: version
        value: "0.1"

  params:
    - name: git-revision
      value:
        url: "{{ repo_url }}"
        branch: "{{ source_branch }}"
        commit: "{{ revision }}"
    - name: test
      value:
        image: registry.alauda.cn:60080/devops/builder-go:1.23
        command: |
          set -x
          cd $(workspaces.source.path)/testing

          export PATH=$(pwd)/bin:$PATH

          # install dependencies
          ./hack/install-test-dependency.sh $(pwd)/bin

          cd $(workspaces.source.path)/charts/sonarqube
          helm dependency update
          cd $(workspaces.source.path)/testing

          export KUBECONFIG=$(workspaces.config.path)/vcluster-config
          kubectl config view

          export GOPROXY=https://build-nexus.alauda.cn/repository/golang/,direct
          export GOMAXPROCS=4

          echo "run integration tests..."
          export REPORT=allure
          make test
    - name: vcluster
      value:
        custom-config: |
          sync:
            toHost:
              ingresses:
                enabled: true
            fromHost:
              storageClasses:
                enabled: true
              ingressClasses:
                enabled: true
    - name: report
      value:
        command: |
          cd $(workspaces.source.path)/testing

          mv ./godogs/allure-results allure-results
          allure generate --clean

          echo "Listing contents of report directory"
          ls -al
        path: testing/allure-report
  workspaces:
    - name: kube-config
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteMany
          resources:
            requests:
              storage: 50Mi
    - name: cache
      persistentVolumeClaim:
        claimName: build-cache
      subPath: golang
    - name: source
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteMany
          resources:
            requests:
              storage: 1Gi
    - name: upload-conf
      secret:
        secretName: upload-allure-report-conf
